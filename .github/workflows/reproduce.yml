name: reproduce-and-artifacts

on:
  workflow_dispatch:
    inputs:
      n_obs:   { description: "number of observations", default: "40" }
      grid:    { description: "grid size",               default: "80" }
      noise:   { description: "observation noise",       default: "0.1" }
      vx:      { description: "flow vx",                 default: "1.0" }
      vy:      { description: "flow vy",                 default: "0.3" }
      seed:    { description: "random seed",             default: "7" }
     
      # 回写仓库的开关，先默认 false，跑通再打开
      commit_outputs:
        description: "push results to branch 'artifacts'"
        default: "false"

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg   # 无界面绘图

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
    
          # pip install "shapely>=2,<2.1"

      - name: Clean outputs
        run: |
          rm -rf figures/* || true
          rm -f data/synth_points.csv data/grid_coords.csv data/grid_pred.csv data/flow_meta.json || true
          # 强制重建海岸线时解注下一行
          # rm -f data/malaysia_barrier.geojson || true

      - name: Generate data
        run: |
          python scripts/generate_synth.py \
            --n_obs "${{ inputs.n_obs }}" \
            --grid  "${{ inputs.grid  }}" \
            --noise "${{ inputs.noise }}" \
            --vx    "${{ inputs.vx    }}" \
            --vy    "${{ inputs.vy    }}" \
            --seed  "${{ inputs.seed  }}"
          ls -l data || true

      - name: Baseline (anisotropic GP)
        run: |
          python scripts/run_baseline.py --fast_loo --use_trend
          ls -l figures || true

      - name: Physics-soft (MY shoreline + kernel mix + conformal + active sampling)
        run: |
          python scripts/run_physics_soft.py --use_trend
          ls -l figures || true
          ls -l data || true
          [ -f figures/metrics_physics_soft.json ] && head -n 60 figures/metrics_physics_soft.json || true

      - name: Upload artifacts (zip on run page)
        uses: actions/upload-artifact@v4
        with:
          name: pik_outputs-${{ github.run_number }}
          if-no-files-found: ignore
          path: |
            figures/*.png
            figures/metrics_physics_soft.json
            figures/next_points.csv
            data/grid_pred.csv
            data/malaysia_barrier.geojson

      - name: Push results to 'artifacts' branch (optional)
        if: ${{ inputs.commit_outputs == 'true' }}
        shell: bash
        run: |
          set -e
          ts=$(date +'%Y%m%d-%H%M%S')
          out="artifacts/${ts}"
          mkdir -p "${out}/figures" "${out}/data"
          cp -r figures/*.png "${out}/figures/" 2>/dev/null || true
          cp -f figures/metrics_physics_soft.json "${out}/figures/" 2>/dev/null || true
          cp -f figures/next_points.csv "${out}/figures/" 2>/dev/null || true
          cp -f data/grid_pred.csv "${out}/data/" 2>/dev/null || true
          [ -f data/malaysia_barrier.geojson ] && cp -f data/malaysia_barrier.geojson "${out}/data/"

          git fetch origin
          if git show-ref --verify --quiet refs/heads/artifacts; then
            git switch artifacts
            git pull --ff-only origin artifacts || true
          else
            git switch --orphan artifacts
            git reset --hard
          fi

          mkdir -p "$(dirname "${out}")"
          cp -r "${GITHUB_WORKSPACE}/${out}" "${out}" -r

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${out}"
          git commit -m "artifacts: physics-soft run ${ts}"
          git push origin HEAD:artifacts
